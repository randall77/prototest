// Code generated by protoc-gen-go.
// source: proto3.proto
// DO NOT EDIT!

package prototest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import unsafe "unsafe"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = unsafe.Pointer(nil)

type Small3_Enum int32

const (
	Small3_EA Small3_Enum = 0
	Small3_EB Small3_Enum = 1
	Small3_EC Small3_Enum = 2
)

var Small3_Enum_name = map[int32]string{
	0: "EA",
	1: "EB",
	2: "EC",
}
var Small3_Enum_value = map[string]int32{
	"EA": 0,
	"EB": 1,
	"EC": 2,
}

func (x Small3_Enum) String() string {
	return proto.EnumName(Small3_Enum_name, int32(x))
}
func (Small3_Enum) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type Small3 struct {
	A int32            `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B uint32           `protobuf:"fixed32,2,opt,name=b" json:"b,omitempty"`
	C string           `protobuf:"bytes,3,opt,name=c" json:"c,omitempty"`
	D []float64        `protobuf:"fixed64,4,rep,packed,name=d" json:"d,omitempty"`
	E *Inner3          `protobuf:"bytes,5,opt,name=e" json:"e,omitempty"`
	F []*Inner3        `protobuf:"bytes,6,rep,name=f" json:"f,omitempty"`
	G *Group1          `protobuf:"bytes,8,opt,name=g" json:"g,omitempty"`
	H []*Group2        `protobuf:"bytes,9,rep,name=h" json:"h,omitempty"`
	I Small3_Enum      `protobuf:"varint,12,opt,name=i,enum=prototest.Small3_Enum" json:"i,omitempty"`
	J map[int32]string `protobuf:"bytes,13,rep,name=j" json:"j,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Types that are valid to be assigned to Oneof:
	//	*Small3_X
	//	*Small3_Y
	Oneof isSmall3_Oneof `protobuf_oneof:"Oneof"`
}

func (m *Small3) Reset()                    { *m = Small3{} }
func (m *Small3) String() string            { return proto.CompactTextString(m) }
func (*Small3) ProtoMessage()               {}
func (*Small3) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type isSmall3_Oneof interface {
	isSmall3_Oneof()
}

type Small3_X struct {
	X int64 `protobuf:"varint,14,opt,name=x,oneof"`
}
type Small3_Y struct {
	Y string `protobuf:"bytes,15,opt,name=y,oneof"`
}

func (*Small3_X) isSmall3_Oneof() {}
func (*Small3_Y) isSmall3_Oneof() {}

func (m *Small3) GetOneof() isSmall3_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *Small3) GetE() *Inner3 {
	if m != nil {
		return m.E
	}
	return nil
}

func (m *Small3) GetF() []*Inner3 {
	if m != nil {
		return m.F
	}
	return nil
}

func (m *Small3) GetG() *Group1 {
	if m != nil {
		return m.G
	}
	return nil
}

func (m *Small3) GetH() []*Group2 {
	if m != nil {
		return m.H
	}
	return nil
}

func (m *Small3) GetJ() map[int32]string {
	if m != nil {
		return m.J
	}
	return nil
}

func (m *Small3) GetX() int64 {
	if x, ok := m.GetOneof().(*Small3_X); ok {
		return x.X
	}
	return 0
}

func (m *Small3) GetY() string {
	if x, ok := m.GetOneof().(*Small3_Y); ok {
		return x.Y
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Small3) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Small3_OneofMarshaler, _Small3_OneofUnmarshaler, _Small3_OneofSizer, []interface{}{
		(*Small3_X)(nil),
		(*Small3_Y)(nil),
	}
}

func _Small3_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Small3)
	// Oneof
	switch x := m.Oneof.(type) {
	case *Small3_X:
		b.EncodeVarint(14<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.X))
	case *Small3_Y:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Y)
	case nil:
	default:
		return fmt.Errorf("Small3.Oneof has unexpected type %T", x)
	}
	return nil
}

func _Small3_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Small3)
	switch tag {
	case 14: // Oneof.x
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Oneof = &Small3_X{int64(x)}
		return true, err
	case 15: // Oneof.y
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Oneof = &Small3_Y{x}
		return true, err
	default:
		return false, nil
	}
}

func _Small3_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Small3)
	// Oneof
	switch x := m.Oneof.(type) {
	case *Small3_X:
		n += proto.SizeVarint(14<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.X))
	case *Small3_Y:
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Y)))
		n += len(x.Y)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func (m *Small3) MergeFullCustom(b []byte) error {
	for len(b) > 0 {
		x, n := proto.DecodeVarint(b)
		if n == 0 {
			return proto.ErrInternalBadWireType
		}
		b = b[n:]
		switch x >> 3 {
		case 1:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			v := int32(x)
			m.A = v
		case 2:
			if len(b) < 4 {
				return proto.ErrInternalBadWireType
			}
			v := uint32(b[0]) | uint32(b[1])<<8 | uint32(b[2])<<16 | uint32(b[3])<<24
			b = b[4:]
			m.B = v
		case 3:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			v := string(b[:x])
			b = b[x:]
			m.C = v
		case 4:
			if len(b) < 8 {
				return proto.ErrInternalBadWireType
			}
			v := math.Float64frombits(uint64(b[0]) | uint64(b[1])<<8 | uint64(b[2])<<16 | uint64(b[3])<<24 | uint64(b[4])<<32 | uint64(b[5])<<40 | uint64(b[6])<<48 | uint64(b[7])<<56)
			b = b[8:]
			m.D = append(m.D, v)
		case 5:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			var v Inner3
			if err := v.MergeFullCustom(b[:x]); err != nil {
				return err
			}
			b = b[x:]
			m.E = &v
		case 6:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			var v Inner3
			if err := v.MergeFullCustom(b[:x]); err != nil {
				return err
			}
			b = b[x:]
			m.F = append(m.F, &v)
		case 8:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			var v Group1
			if err := v.MergeFullCustom(b[:x]); err != nil {
				return err
			}
			b = b[x:]
			m.G = &v
		case 9:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			var v Group2
			if err := v.MergeFullCustom(b[:x]); err != nil {
				return err
			}
			b = b[x:]
			m.H = append(m.H, &v)
		case 12:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			v := Small3_Enum(x)
			m.I = v
		case 13:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			b = b[x:]
		case 14:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			v := int64(x)
			w := Small3_X{X: v}
			m.Oneof = &w
		case 15:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			v := string(b[:x])
			b = b[x:]
			w := Small3_Y{Y: v}
			m.Oneof = &w
		default:
			return proto.ErrInternalBadWireType
		}
	}
	return nil
}

var XXX_Unpack_Small3 = proto.UnpackMessageInfo{
	Make: func() unsafe.Pointer {
		return unsafe.Pointer(new(Small3))
	},
	Dense: []proto.UnpackFieldInfo{
		1: {
			Offset: unsafe.Offsetof(Small3{}.A),
			Unpack: proto.UnpackInt32_3,
		},
		2: {
			Offset: unsafe.Offsetof(Small3{}.B),
			Unpack: proto.UnpackFixed32_3,
		},
		3: {
			Offset: unsafe.Offsetof(Small3{}.C),
			Unpack: proto.UnpackString_3,
		},
		4: {
			Offset: unsafe.Offsetof(Small3{}.D),
			Unpack: proto.UnpackDouble_R,
		},
		5: {
			Offset: unsafe.Offsetof(Small3{}.E),
			Sub:    &XXX_Unpack_Inner3,
			Unpack: proto.UnpackMessage,
		},
		6: {
			Offset: unsafe.Offsetof(Small3{}.F),
			Sub:    &XXX_Unpack_Inner3,
			Unpack: proto.UnpackMessage_R,
		},
		8: {
			Offset: unsafe.Offsetof(Small3{}.G),
			Sub:    &XXX_Unpack_Group1,
			Unpack: proto.UnpackMessage,
		},
		9: {
			Offset: unsafe.Offsetof(Small3{}.H),
			Sub:    &XXX_Unpack_Group2,
			Unpack: proto.UnpackMessage_R,
		},
		12: {
			Offset: unsafe.Offsetof(Small3{}.I),
			Unpack: proto.UnpackEnum_3,
		},
	},
	Sparse:             nil,
	UnrecognizedOffset: 1,
}

func (m *Small3) MergeTableDriven(b []byte) error {
	return proto.UnmarshalMsg(b, unsafe.Pointer(m), &XXX_Unpack_Small3)
}

type Inner3 struct {
	A int64 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
}

func (m *Inner3) Reset()                    { *m = Inner3{} }
func (m *Inner3) String() string            { return proto.CompactTextString(m) }
func (*Inner3) ProtoMessage()               {}
func (*Inner3) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Inner3) MergeFullCustom(b []byte) error {
	for len(b) > 0 {
		x, n := proto.DecodeVarint(b)
		if n == 0 {
			return proto.ErrInternalBadWireType
		}
		b = b[n:]
		switch x >> 3 {
		case 1:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			v := int64(x)
			m.A = v
		default:
			return proto.ErrInternalBadWireType
		}
	}
	return nil
}

var XXX_Unpack_Inner3 = proto.UnpackMessageInfo{
	Make: func() unsafe.Pointer {
		return unsafe.Pointer(new(Inner3))
	},
	Dense: []proto.UnpackFieldInfo{
		1: {
			Offset: unsafe.Offsetof(Inner3{}.A),
			Unpack: proto.UnpackInt64_3,
		},
	},
	Sparse:             nil,
	UnrecognizedOffset: 1,
}

func (m *Inner3) MergeTableDriven(b []byte) error {
	return proto.UnmarshalMsg(b, unsafe.Pointer(m), &XXX_Unpack_Inner3)
}

type Group1 struct {
	X float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
}

func (m *Group1) Reset()                    { *m = Group1{} }
func (m *Group1) String() string            { return proto.CompactTextString(m) }
func (*Group1) ProtoMessage()               {}
func (*Group1) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Group1) MergeFullCustom(b []byte) error {
	for len(b) > 0 {
		x, n := proto.DecodeVarint(b)
		if n == 0 {
			return proto.ErrInternalBadWireType
		}
		b = b[n:]
		switch x >> 3 {
		case 1:
			if len(b) < 4 {
				return proto.ErrInternalBadWireType
			}
			v := math.Float32frombits(uint32(b[0]) | uint32(b[1])<<8 | uint32(b[2])<<16 | uint32(b[3])<<24)
			b = b[4:]
			m.X = v
		default:
			return proto.ErrInternalBadWireType
		}
	}
	return nil
}

var XXX_Unpack_Group1 = proto.UnpackMessageInfo{
	Make: func() unsafe.Pointer {
		return unsafe.Pointer(new(Group1))
	},
	Dense: []proto.UnpackFieldInfo{
		1: {
			Offset: unsafe.Offsetof(Group1{}.X),
			Unpack: proto.UnpackFloat_3,
		},
	},
	Sparse:             nil,
	UnrecognizedOffset: 1,
}

func (m *Group1) MergeTableDriven(b []byte) error {
	return proto.UnmarshalMsg(b, unsafe.Pointer(m), &XXX_Unpack_Group1)
}

type Group2 struct {
	X int32 `protobuf:"zigzag32,1,opt,name=x" json:"x,omitempty"`
}

func (m *Group2) Reset()                    { *m = Group2{} }
func (m *Group2) String() string            { return proto.CompactTextString(m) }
func (*Group2) ProtoMessage()               {}
func (*Group2) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Group2) MergeFullCustom(b []byte) error {
	for len(b) > 0 {
		x, n := proto.DecodeVarint(b)
		if n == 0 {
			return proto.ErrInternalBadWireType
		}
		b = b[n:]
		switch x >> 3 {
		case 1:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			v := int32(x>>1) ^ int32(x)<<31>>31
			m.X = v
		default:
			return proto.ErrInternalBadWireType
		}
	}
	return nil
}

var XXX_Unpack_Group2 = proto.UnpackMessageInfo{
	Make: func() unsafe.Pointer {
		return unsafe.Pointer(new(Group2))
	},
	Dense: []proto.UnpackFieldInfo{
		1: {
			Offset: unsafe.Offsetof(Group2{}.X),
			Unpack: proto.UnpackSint32_3,
		},
	},
	Sparse:             nil,
	UnrecognizedOffset: 1,
}

func (m *Group2) MergeTableDriven(b []byte) error {
	return proto.UnmarshalMsg(b, unsafe.Pointer(m), &XXX_Unpack_Group2)
}
func init() {
	proto.RegisterType((*Small3)(nil), "prototest.Small3")
	proto.RegisterType((*Inner3)(nil), "prototest.Inner3")
	proto.RegisterType((*Group1)(nil), "prototest.Group1")
	proto.RegisterType((*Group2)(nil), "prototest.Group2")
	proto.RegisterEnum("prototest.Small3_Enum", Small3_Enum_name, Small3_Enum_value)
}

func init() { proto.RegisterFile("proto3.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x91, 0xcf, 0x4a, 0xeb, 0x40,
	0x18, 0xc5, 0x7b, 0x92, 0x26, 0xbd, 0xf9, 0x6e, 0x6f, 0x6f, 0x3a, 0x48, 0x19, 0x5c, 0xe8, 0x50,
	0x44, 0xb2, 0x0a, 0x98, 0xba, 0x10, 0x77, 0x56, 0x8a, 0x7f, 0x36, 0xc2, 0xe7, 0x13, 0xa4, 0x6d,
	0xfa, 0xcf, 0x36, 0x29, 0x31, 0x95, 0xe4, 0x31, 0x7c, 0x63, 0x99, 0x89, 0xb4, 0x42, 0x71, 0x75,
	0x72, 0x0e, 0x3f, 0x0e, 0x99, 0xf3, 0x51, 0x7b, 0x9b, 0x67, 0x45, 0x36, 0x08, 0x8d, 0x08, 0xcf,
	0x48, 0x91, 0xbc, 0x17, 0xfd, 0x4f, 0x9b, 0xdc, 0xd7, 0x4d, 0xbc, 0x5e, 0x0f, 0x44, 0x9b, 0x10,
	0x4b, 0x28, 0x04, 0x0e, 0x23, 0xd6, 0x6e, 0x2c, 0x2d, 0x85, 0xa0, 0xc5, 0x18, 0x6b, 0x37, 0x91,
	0xb6, 0x42, 0xe0, 0x31, 0x26, 0xda, 0x4d, 0x65, 0x53, 0xd9, 0x01, 0x18, 0x53, 0x71, 0x4e, 0x48,
	0xa4, 0xa3, 0x10, 0xfc, 0x8d, 0xba, 0xe1, 0xbe, 0x39, 0x7c, 0x4a, 0xd3, 0x24, 0x1f, 0x30, 0x12,
	0x0d, 0xcc, 0xa4, 0xab, 0xec, 0x5f, 0x80, 0x99, 0x06, 0xe6, 0xf2, 0xcf, 0x51, 0xc3, 0x43, 0x9e,
	0xed, 0xb6, 0x57, 0x8c, 0xb9, 0x06, 0x16, 0xd2, 0x3b, 0x6a, 0x30, 0x40, 0xc4, 0x58, 0x88, 0x0b,
	0xc2, 0x52, 0xb6, 0x15, 0x82, 0x4e, 0xd4, 0xfb, 0x01, 0xd4, 0x2f, 0x0b, 0x47, 0xe9, 0x6e, 0xc3,
	0x58, 0x8a, 0x4b, 0xc2, 0x4a, 0xfe, 0x33, 0x35, 0xf2, 0x98, 0x7a, 0x1e, 0xa5, 0x45, 0x5e, 0x31,
	0x56, 0xa2, 0x43, 0x28, 0x65, 0x47, 0x21, 0xb0, 0x1f, 0x1b, 0x8c, 0x52, 0xfb, 0x4a, 0xfe, 0xd7,
	0xaf, 0xd7, 0xbe, 0x3a, 0xbd, 0x26, 0xb7, 0x86, 0x85, 0x4f, 0xf6, 0x5b, 0x52, 0x7d, 0xaf, 0xa6,
	0x3f, 0xc5, 0x09, 0x39, 0x1f, 0xf1, 0x7a, 0x97, 0x98, 0xed, 0x3c, 0xae, 0xcd, 0xad, 0x75, 0x83,
	0xfe, 0x19, 0x35, 0xf5, 0x8f, 0x08, 0x97, 0xac, 0xd1, 0x9d, 0xdf, 0x30, 0x3a, 0xf4, 0x61, 0xf4,
	0xde, 0xb7, 0x86, 0x2d, 0x72, 0x5e, 0xd2, 0x24, 0x9b, 0xf5, 0x7b, 0xe4, 0xd6, 0xdb, 0x1c, 0x4e,
	0x62, 0x33, 0x62, 0x9d, 0xd7, 0x93, 0xe8, 0xbc, 0x34, 0xb9, 0xc5, 0x28, 0xf7, 0x79, 0x74, 0xc8,
	0xbb, 0x8c, 0x72, 0xec, 0xd6, 0x47, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x9f, 0x16, 0x0d,
	0xfd, 0x01, 0x00, 0x00,
}
