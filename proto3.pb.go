// Code generated by protoc-gen-go.
// source: proto3.proto
// DO NOT EDIT!

package prototest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import unsafe "unsafe"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Small3 struct {
	A int32     `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B uint32    `protobuf:"fixed32,2,opt,name=b" json:"b,omitempty"`
	C string    `protobuf:"bytes,3,opt,name=c" json:"c,omitempty"`
	D []float64 `protobuf:"fixed64,4,rep,packed,name=d" json:"d,omitempty"`
	E *Inner3   `protobuf:"bytes,5,opt,name=e" json:"e,omitempty"`
	F []*Inner3 `protobuf:"bytes,6,rep,name=f" json:"f,omitempty"`
}

func (m *Small3) Reset()                    { *m = Small3{} }
func (m *Small3) String() string            { return proto.CompactTextString(m) }
func (*Small3) ProtoMessage()               {}
func (*Small3) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Small3) GetE() *Inner3 {
	if m != nil {
		return m.E
	}
	return nil
}

func (m *Small3) GetF() []*Inner3 {
	if m != nil {
		return m.F
	}
	return nil
}

func (m *Small3) MergeFullCustom(b []byte) error {
	for len(b) > 0 {
		x, n := proto.DecodeVarint(b)
		if n == 0 {
			return proto.ErrInternalBadWireType
		}
		b = b[n:]
		switch x >> 3 {
		case 1:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			v := int32(x)
			m.A = v
		case 2:
			if len(b) < 4 {
				return proto.ErrInternalBadWireType
			}
			v := uint32(b[0]) | uint32(b[1])<<8 | uint32(b[2])<<16 | uint32(b[3])<<24
			b = b[4:]
			m.B = v
		case 3:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			v := string(b[:x])
			b = b[x:]
			m.C = v
		case 4:
			if len(b) < 8 {
				return proto.ErrInternalBadWireType
			}
			v := math.Float64frombits(uint64(b[0]) | uint64(b[1])<<8 | uint64(b[2])<<16 | uint64(b[3])<<24 | uint64(b[4])<<32 | uint64(b[5])<<40 | uint64(b[6])<<48 | uint64(b[7])<<56)
			b = b[8:]
			m.D = append(m.D, v)
		case 5:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			var v Inner3
			if err := v.MergeFullCustom(b[:x]); err != nil {
				return err
			}
			b = b[x:]
			m.E = &v
		case 6:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			if uint64(len(b)) < x {
				return proto.ErrInternalBadWireType
			}
			var v Inner3
			if err := v.MergeFullCustom(b[:x]); err != nil {
				return err
			}
			b = b[x:]
			m.F = append(m.F, &v)
		default:
		}
	}
	return nil
}

var XXX_Unpack_Small3 = proto.UnpackMessageInfo{
	Make: func() unsafe.Pointer {
		return unsafe.Pointer(new(Small3))
	},
	Dense: []proto.UnpackFieldInfo{
		1: {
			Offset: unsafe.Offsetof(Small3{}.A),
			Unpack: proto.UnpackInt32_3,
		},
		2: {
			Offset: unsafe.Offsetof(Small3{}.B),
			Unpack: proto.UnpackFixed32_3,
		},
		3: {
			Offset: unsafe.Offsetof(Small3{}.C),
			Unpack: proto.UnpackString_3,
		},
		4: {
			Offset: unsafe.Offsetof(Small3{}.D),
			Unpack: proto.UnpackDouble_R,
		},
		5: {
			Offset: unsafe.Offsetof(Small3{}.E),
			Sub:    &XXX_Unpack_Inner3,
			Unpack: proto.UnpackMessage,
		},
		6: {
			Offset: unsafe.Offsetof(Small3{}.F),
			Sub:    &XXX_Unpack_Inner3,
			Unpack: proto.UnpackMessage_R,
		},
	},
	Sparse:             nil,
	UnrecognizedOffset: 1,
}

func (m *Small3) MergeTableDriven(b []byte) error {
	return proto.UnmarshalMsg(b, unsafe.Pointer(m), &XXX_Unpack_Small3)
}

type Inner3 struct {
	A int64 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
}

func (m *Inner3) Reset()                    { *m = Inner3{} }
func (m *Inner3) String() string            { return proto.CompactTextString(m) }
func (*Inner3) ProtoMessage()               {}
func (*Inner3) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Inner3) MergeFullCustom(b []byte) error {
	for len(b) > 0 {
		x, n := proto.DecodeVarint(b)
		if n == 0 {
			return proto.ErrInternalBadWireType
		}
		b = b[n:]
		switch x >> 3 {
		case 1:
			x, n = proto.DecodeVarint(b)
			if n == 0 {
				return proto.ErrInternalBadWireType
			}
			b = b[n:]
			v := int64(x)
			m.A = v
		default:
		}
	}
	return nil
}

var XXX_Unpack_Inner3 = proto.UnpackMessageInfo{
	Make: func() unsafe.Pointer {
		return unsafe.Pointer(new(Inner3))
	},
	Dense: []proto.UnpackFieldInfo{
		1: {
			Offset: unsafe.Offsetof(Inner3{}.A),
			Unpack: proto.UnpackInt64_3,
		},
	},
	Sparse:             nil,
	UnrecognizedOffset: 1,
}

func (m *Inner3) MergeTableDriven(b []byte) error {
	return proto.UnmarshalMsg(b, unsafe.Pointer(m), &XXX_Unpack_Inner3)
}
func init() {
	proto.RegisterType((*Small3)(nil), "prototest.Small3")
	proto.RegisterType((*Inner3)(nil), "prototest.Inner3")
}

func init() { proto.RegisterFile("proto3.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0x37, 0xd6, 0x03, 0x53, 0x42, 0x9c, 0x60, 0xaa, 0x24, 0xb5, 0xb8, 0x44, 0xa9, 0x89, 0x91,
	0x8b, 0x2d, 0x38, 0x37, 0x31, 0x27, 0xc7, 0x58, 0x88, 0x87, 0x8b, 0x31, 0x51, 0x82, 0x51, 0x81,
	0x51, 0x83, 0x35, 0x88, 0x31, 0x11, 0xc4, 0x4b, 0x92, 0x60, 0x02, 0xf2, 0xd8, 0x83, 0x18, 0x93,
	0x40, 0xbc, 0x64, 0x09, 0x66, 0x20, 0x8f, 0x33, 0x88, 0x31, 0x19, 0xc4, 0x4b, 0x91, 0x60, 0x51,
	0x60, 0xd6, 0x60, 0x0c, 0x62, 0x4c, 0x11, 0x92, 0xe7, 0x62, 0x4c, 0x95, 0x60, 0x05, 0xca, 0x71,
	0x1b, 0x09, 0xea, 0xc1, 0x4d, 0xd6, 0xf3, 0xcc, 0xcb, 0x4b, 0x2d, 0x32, 0x0e, 0x62, 0x4c, 0x05,
	0x29, 0x48, 0x93, 0x60, 0x03, 0x2a, 0xc7, 0xae, 0x20, 0x4d, 0x49, 0x8c, 0x8b, 0x0d, 0xc2, 0x41,
	0xb8, 0x81, 0x19, 0xe8, 0x86, 0x24, 0x36, 0x88, 0xab, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x78,
	0x25, 0x11, 0x60, 0xbe, 0x00, 0x00, 0x00,
}
